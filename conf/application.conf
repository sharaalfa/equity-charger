# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
play.crypto.secret="F<@3eoqQeYKap2wfAj^^xXEpZHrVBWZ0_:1^c0D/DPx9YuFwjtip3kkRXaou`oVL"
play.crypto.secret=${?APPLICATION_SECRET}
# The application languages
# ~~~~~
play.i18n.langs=["en"]
# Registers the request handler
# ~~~~~
play.http.requestHandler = "play.api.http.DefaultHttpRequestHandler"
# The application DI modules
# ~~~~~
play.modules.enabled += "modules.BaseModule"
play.modules.enabled += "modules.JobModule"
play.modules.enabled += "modules.SilhouetteModule"
play.modules.enabled += "play.api.libs.mailer.MailerModule"
play.assets {
  path = "/public"
  urlPrefix = "/assets"
}
play.modules.disabled += "com.mohiva.play.silhouette.api.actions.SecuredErrorHandlerModule"
play.modules.disabled += "com.mohiva.play.silhouette.api.actions.UnsecuredErrorHandlerModule"
# Registers the filters
# ~~~~~
play.http.filters = "filters.Filters"
# Akka config
akka {
  loglevel = "INFO"
  jvm-exit-on-fatal-error=off

  # Auth token cleaner
  quartz.schedules.AuthTokenCleaner {
    expression = "0 0 */1 * * ?"
    timezone = "UTC"
    description = "cleanup the auth tokens on every hour"
  }
}

# Play mailer
play.mailer {
  host = "localhost"
  port = 25
  mock = true
}
# play-slick configuration

slick.dbs.default.driver= "slick.driver.PostgresDriver$"
slick.dbs.default.db.driver = "org.postgresql.Driver"
slick.dbs.default.db.url = "jdbc:postgresql://ec2-23-21-129-50.compute-1.amazonaws.com:5432/d8bee5g9mb3ff4"
slick.dbs.default.db.user = "txsuctypezdezp"
slick.dbs.default.db.password = "e70dc0c8d8ab5b96d8953482e19bbaeb609e8ad1ee6fc3e4ea4f6a90fec17f33"



# Security Filter Configuration - Content Security Policy
# ~~~~~
#play.filters.headers.contentSecurityPolicy
# default-src
# 'self'
# img-src
# 'self'
# fbcdn-profile-a.akamaihd.net (Facebook)
# *.twimg.com (Twitter)
# *.googleusercontent.com (Google)
# *.xingassets.com (Xing)
# vk.com (VK)
# *.yimg.com (Yahoo)
# secure.gravatar.com
# style-src
# 'self'
# 'unsafe-inline'
# cdnjs.cloudflare.com
# maxcdn.bootstrapcdn.com
# cdn.jsdelivr.net
# fonts.googleapis.com
# 'unsafe-inline' (in-line css found in bootstrap.min.js)
# font-src
# 'self'
# fonts.gstatic.com
# fonts.googleapis.com
# cdnjs.cloudflare.com
# script-src
# 'self'
# clef.io
# connect-src
# 'self'
# twitter.com
# *.xing.com
# frame-src
# clef.io
# Security Filter Configuration - Content Security Policy
play.filters.headers {
  contentSecurityPolicy = "default-src 'self';"
  contentSecurityPolicy = ${play.filters.headers.contentSecurityPolicy}" img-src 'self' *.fbcdn.net *.twimg.com *.googleusercontent.com *.xingassets.com vk.com *.yimg.com secure.gravatar.com;"
  contentSecurityPolicy = ${play.filters.headers.contentSecurityPolicy}" style-src 'self' 'unsafe-inline' cdnjs.cloudflare.com maxcdn.bootstrapcdn.com cdn.jsdelivr.net fonts.googleapis.com;"
  contentSecurityPolicy = ${play.filters.headers.contentSecurityPolicy}" font-src 'self' fonts.gstatic.com fonts.googleapis.com cdnjs.cloudflare.com;"
  contentSecurityPolicy = ${play.filters.headers.contentSecurityPolicy}" script-src 'self' cdnjs.cloudflare.com;"
  contentSecurityPolicy = ${play.filters.headers.contentSecurityPolicy}" connect-src 'self' twitter.com *.xing.com;"
}
include "silhouette.conf"
